# Copyright (c) 2018-2019 The Ion developers
name: ioncore
base: core18
version: 3.2.99
summary:   gaming related peer-to-peer network based digital currency
description: |
  Ion Core is an MIT licensed,  open source, gaming oriented,
  blockchain-based cryptocurrency with ultra fast transactions,
  low fees, high network decentralization, and Zero Knowledge
  cryptography proofs for industry-leading transaction anonymity.
  
  This package includes following binaries:
  
    iond, ion-cli, ion-tx, ion-qt, test_ion, test_ion-qt
  
  Default homefolder:
  
    ~/snap/ioncore/common/.ioncoin
  
  How to launch snap binaries in terminal?:
  
    ioncore.qt     - launches Ion Core QT (ion-qt)
    ioncore.daemon - launches Ion Core daemon (iond)
    ioncore.cli    - launches Ion Core RPC (ion-cli)
    ioncore.tx     - launches Ion Core ion-tx utility (ion-tx)
    test           - launches test_ion
    testqt         - launches test_ion-qt
  
  Additional launchers for tegtest and testnet:
  
    ioncore.qt-testnet     - launches Ion Core QT with testnet=1
    ioncore.daemon-testnet - launches Ion Core daemon with testnet=1
    ioncore.cli-testnet    - launches Ion Core RPC with testnet=1
  
    ioncore.qt-regtest     - launches Ion Core QT with regtest=1
    ioncore.daemon-regtest - launches Ion Core daemon with regtest=1
    ioncore.cli-regtest    - launches Ion Core RPC with regtest=1
  
  Documentation and wiki:
  
  - Wiki (Ion Core):    https://github.com/ioncoincore/ion/wiki
  - Wiki (Ionomy):      https://github.com/ionomy/ion/wiki
  - Wiki (Ion Core CE): https://github.com/cevap/ion/wiki
  - Technical documentation: https://techdoc.ioncoin.org
  - Whitepaper: https://ionomy.com/en/whitepaper
  - Technical whitepaper: https://tinyurl.com/y3st8jfb
  
  Get source code from Github: https://github.com/ioncoincore/ion.git
  Get CE source code from Github: https://github.com/cevap/ion.git
  
  Chat with Support on Discord: https://discord.gg/vuZn7gC
  
  Contact us on social networks and forums:
  
  - Instagram: https://t.me/ionomy
  - Twitter:   https://twitter.com/ionomics
  - Reddit:    https://www.reddit.com/r/ionomy/
  - Facebook:  https://facebook.com/ionomy
  
  - Feature request: https://tinyurl.com/y5ds7s3t
  - I need help/support: https://tinyurl.com/yy6xa3p4
  - Report a bug: https://tinyurl.com/y5wzybwe
  - Report some random issue: https://tinyurl.com/y5cgm2vp
  - Testing Report: https://tinyurl.com/y39n2hsv
grade: devel
confinement: strict
icon: src/qt/res/src/ion.svg
apps:
  daemon:
    command: iond
    plugs: [network, network-bind, network-status, home, removable-media]
    desktop: iond.desktop
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  daemon-testnet:
    command: iond --testnet
    plugs: [network, network-bind, network-status, home, removable-media]
    desktop: iond_testnet.desktop
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  daemon-regtest:
    command: iond --regtest
    desktop: iond_regtest.desktop
    plugs: [network, network-bind, network-status, home, removable-media]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt:
    command: ion-qt
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: ion-qt.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt-testnet:
    command: ion-qt --testnet
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: ion-qt_testnet.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt-regtest:
    command: ion-qt --regtest
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: ion-qt_regtest.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  cli:
    command: ion-cli
    plugs: [network, network-bind, network-status, home]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  cli-testnet:
    command: ion-cli --testnet
    plugs: [network, network-bind, home]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  cli-regtest:
    command: ion-cli --regtest
    plugs: [network, network-bind, home]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  tx:
    command: ion-tx
    plugs: [home]
  test:
    command: test_ion
    plugs: [home]
  testqt:
    command: test_ion-qt
    plugs: [home]
parts:
  ion:
    source: https://github.com/ioncoincore/ion
    source-type: git
    source-tag: master
    plugin: nil
    override-build: |
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "CUSTOM SETTINGS"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      #    use overrife prefix if binaries differ from project name, for ion it does,
      #    project is called ioncore because ion exists already as package. For anybody
      #    offering non official release and using own SNAP, this var should be used
      #      default value is "false", to enable it, use binary prefex, for us it is ion
      OVERRIDEBINPREFIX="ion"
      OVERRIDEDATADIR="ioncoin"
      OVERRIDECONF="${OVERRIDEDATADIR}"
      JOBS=4
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "SET OVERRIDE VARIABLES IF SET" # checks OVERRIDEBINPREFIX, OVERRIDEDATADIR and OVERRIDECONF
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      if [ $OVERRIDEBINPREFIX = "false" ]; then
        BINPREF="${SNAPCRAFT_PROJECT_NAME}"
      else
        BINPREF="${OVERRIDEBINPREFIX}"
      fi
      if [ $OVERRIDEDATADIR = "false" ]; then
        DATADIR="${SNAPCRAFT_PROJECT_NAME}"
      else
        DATADIR="${OVERRIDEDATADIR}"
      fi
      if [ $OVERRIDECONF = "false" ]; then
        CONF="${SNAPCRAFT_PROJECT_NAME}"
      else
        CONF="${OVERRIDECONF}"
      fi
      echo "BINPREF VARIABLE - ${BINPREF}"
      echo "DATADIR VARIABLE - ${DATADIR}"
      echo "CONF VARIABLE - ${CONF}"
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "OVERRIDE ARCHITECTURE" # applies currently only on i386,  for i386 architecture, we will use i686-linux-gnu to compile dependencies
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      if [ $SNAPCRAFT_ARCH_TRIPLET = "i386-linux-gnu" ]; then
        HOST="i686-linux-gnu"
      else
        HOST="${SNAPCRAFT_ARCH_TRIPLET}"
      fi
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "APPLY PATCHES ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}" # patches which have to be applied for compilation, replace splash screen
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      cd ${SNAPCRAFT_PART_BUILD}
      echo "apply patches:"
      git apply $SNAPCRAFT_PART_BUILD/snap/local/patches/X001-default_data_dir.patch
      git apply $SNAPCRAFT_PART_BUILD/snap/local/patches/X002-fix-bdb-tmp-folder.patch
      git apply $SNAPCRAFT_PART_BUILD/snap/local/patches/X003-fix-use-snap-instead-of-dirty.patch
      sed -i 's/tar --strip-components/tar --no-same-owner --strip-components/' ${SNAPCRAFT_PART_BUILD}/depends/funcs.mk
      echo "replace splash screen with snapcrafts"
      mv -f $SNAPCRAFT_PART_BUILD/contrib/snap/splash/splash.png $SNAPCRAFT_PART_BUILD/src/qt/res/images/splash.png
      mv -f $SNAPCRAFT_PART_BUILD/contrib/snap/splash/splash_regtest.png $SNAPCRAFT_PART_BUILD/src/qt/res/images/splash_regtest.png
      mv -f $SNAPCRAFT_PART_BUILD/contrib/snap/splash/splash_testnet.png $SNAPCRAFT_PART_BUILD/src/qt/res/images/splash_testnet.png
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "BUILD DEPENDENCIES"
      echo "PRECOMPILE ${SNAPCRAFT_ARCH_TRIPLET} DEPENDENCIES FOR ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}" # cd to depends folder, download and precompile
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      cd ${SNAPCRAFT_PART_BUILD}/depends
      make download-linux
      make -j${JOBS} HOST=${HOST}
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "CONFIGURATION OF ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}" # run configure with prefix to include depends
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      cd ${SNAPCRAFT_PART_BUILD}
      echo "Configure and build ${BINPREF}"
      ./autogen.sh
      ./configure --prefix=`pwd`/depends/${HOST}
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "COMPILATION OF ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}" # run make to compile using -j
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      make -j${JOBS}
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "INSTALLATION OF ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}" # run make install with a prefix where to install
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      make install prefix=${SNAPCRAFT_PART_INSTALL}
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "POST INSTALL SCRIPTS OF ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}" # run make install with a prefix where to install
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      if [ $SNAPCRAFT_ARCH_TRIPLET = "powerpc64le-linux-gnu" ]; then
        if [ -e $SNAPCRAFT_PART_BUILD/src/qt/${BINPREF}-qt ]; then
          echo "PPC64EL fix - ${BINPREF}-qt exists, fix unrequired"
        else
          echo "echo ${BINPREF}-qt is not installed" > ${SNAPCRAFT_PART_INSTALL}/usr/bin/${BINPREF}-qt
          chmod +x ${SNAPCRAFT_PART_INSTALL}/usr/bin/${BINPREF}-qt
          echo "PPC64EL fix - ${BINPREF}-qt does not exist, fix required, dummy as ${BINPREF}-qt"
        fi
      fi
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "CONFIG FILE" # create .ioncoin folder and copy example config - !!!warning!!!: do not copy as ioncoin.conf
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      mkdir -p ${SNAP_USER_COMMON}/.${DATADIR}
      cp ${SNAPCRAFT_PART_BUILD}/debian/manpages/${CONF}.conf.5 ${SNAP_USER_COMMON}/.${DATADIR}/${CONF}-example.conf
      echo "-----------------------------------------------"
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      echo "INSTALATION OF ${BINPREF}-${SNAPCRAFT_PROJECT_VERSION}-snap has finished" # List installed files and vars when installation is finished
      echo "+++++++++++++++++++++++++++++++++++++++++++++++"
      find ${SNAPCRAFT_PART_INSTALL} -type f
      env
      echo "-----------------------------------------------+"
    build-packages:
      - curl
      - wget
      - gcc
      - gcc-8
      - g++
      - g++-8
      - make
      - autoconf
      - automake
      - cmake
      - pkg-config
      - libtool
      - bsdmainutils
      - binutils
      - python3
      - help2man
      - doxygen
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - locales-all
      - qtwayland5
      - ca-certificates
    after:
      - patches
  patches:
    source: snap/local/patches
    plugin: dump
    prime:
      - -*
  desktop:
    source: snap/local/desktop
    plugin: dump