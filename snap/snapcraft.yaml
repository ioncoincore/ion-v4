# Copyright (c) 2018-2019 The Ion developers

name: from-git
version: 3.1.01
base: core18
summary:   gaming related peer-to-peer network based digital currency
description: |
  Ion Core is an MIT licensed,
  open source, gaming oriented, blockchain-based cryptocurrency with
  ultra fast transactions, low fees, high network decentralization, and
  Zero Knowledge cryptography proofs for industry-leading
  transaction anonymity. This package include QT, daemon, cli and tx
  binaries.
  
  Wiki (Ion Core):    https://github.com/ioncoincore/ion/wiki
  Wiki (Ionomy):      https://github.com/ionomy/ion/wiki
  Wiki (Ion Core CE): https://github.com/cevap/ion/wiki
  
  Technical documentation: https://techdoc.ioncoin.org
  
  Whitepaper: https://ionomy.com/en/whitepaper
  
  Technical whitepaper: 
    https://github.com/ionomy/ion/wiki/ION-Technical-Whitepaper
  
  Get source code from Github: https://github.com/ioncoincore/ion.git
  Get CE source code from Github: https://github.com/cevap/ion.git
  
  Chat with Support on Discord: https://discord.gg/vuZn7gC
  
  Contact us on social networks and forums
    Instagram: https://t.me/ionomy
    Twitter:   https://twitter.com/ionomics
    Reddit:    https://www.reddit.com/r/ionomy/
    Facebook:  https://facebook.com/ionomy

grade: stable
confinement: strict
icon: src/qt/res/src/ion.svg
apps:
  daemon:
    command: iond
    plugs: [network, network-bind, home, removable-media]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  daemon-testnet:
    command: iond --testnet
    plugs: [network, network-bind, home, removable-media]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  daemon-regtest:
    command: iond --regtest
    plugs: [network, network-bind, home, removable-media]
  qt:
    command: desktop-launch ion-qt
    plugs: [network, network-bind, unity7, unity8-calendar, unity8-contacts, desktop, desktop-legacy, wayland, x11, mir, opengl, home, removable-media]
    desktop: qt.desktop
  qt-testnet:
    command: desktop-launch ion-qt --testnet
    plugs: [network, network-bind, unity7, unity8-calendar, unity8-contacts, desktop, desktop-legacy, wayland, x11, mir, opengl, home, removable-media]
    desktop: qt-testnet.desktop
  qt-regtest:
    command: desktop-launch ion-qt --regtest
    plugs: [network, network-bind, unity7, unity8-calendar, unity8-contacts, desktop, desktop-legacy, wayland, x11, mir, opengl, home, removable-media]
    desktop: qt-regtest.desktop
  cli:
    command: ion-cli
    plugs: [network, network-bind, home]
  cli-testnet:
    command: ion-cli --testnet
    plugs: [network, network-bind, home]
  cli-regtest:
    command: ion-cli --regtest
    plugs: [network, network-bind, home]
  tx:
    command: ion-tx
    plugs: [home]
parts:
  ion:
    source: https://github.com/ckti/ion
    source-type: git
    source-tag: v3.1.01
    plugin: nil
    override-build: |
      # Patch - Default home folder
      ## We don't want to copy the full blockchain every time that the snap is   
      ## updated, but there's no way to define a default data dir in ion-qt.
      ## Additionaly we fix funcs.mk
      git apply $SNAPCRAFT_STAGE/default_data_dir.patch
      git apply $SNAPCRAFT_STAGE/fix-bdb-tmp-folder.patch
      ## Patch - Fix Bug extracting sources without ownership
      sed -i 's/tar --strip-components/tar --no-same-owner --strip-components/' $SNAPCRAFT_PART_BUILD/depends/funcs.mk
      # Build Dependencies
      echo "START BUILDING FOR $SNAPCRAFT_ARCH_TRIPLET architecture"
      cd $SNAPCRAFT_PART_BUILD/depends
      # Fix building ARM and AARCh64, as on some point they fail with, predownload all packages
      #   curl: (22) The requested URL returned error: 407
      make download-linux
      if [ $SNAPCRAFT_ARCH_TRIPLET = "i386-linux-gnu" ]
      then
        make HOST=i686-linux-gnu -j8
      else
        make HOST=$SNAPCRAFT_ARCH_TRIPLET -j8
      fi
      # Set gXX-8 as default
      update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
      update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
      if [ $SNAPCRAFT_ARCH_TRIPLET = "i386-linux-gnu" ]
      then
        update-alternatives --install /usr/bin/i686-linux-gnu-gcc \
        i686-linux-gnu-gcc /usr/bin/i686-linux-gnu-gcc-8 100
        update-alternatives --install /usr/bin/i686-linux-gnu-g++ \
        i686-linux-gnu-g++ /usr/bin/i686-linux-gnu-g++-8 100
      else 
        update-alternatives --install /usr/bin/$SNAPCRAFT_ARCH_TRIPLET-gcc \
        $SNAPCRAFT_ARCH_TRIPLET-gcc /usr/bin/$SNAPCRAFT_ARCH_TRIPLET-gcc-8 100
        update-alternatives --install /usr/bin/$SNAPCRAFT_ARCH_TRIPLET-g++ \
        $SNAPCRAFT_ARCH_TRIPLET-g++ /usr/bin/$SNAPCRAFT_ARCH_TRIPLET-g++-8 100
      fi
      # Configure Ion Core
      cd $SNAPCRAFT_PART_BUILD
      ./autogen.sh
      if [ $SNAPCRAFT_ARCH_TRIPLET = "i386-linux-gnu" ]
      then
        ./configure --prefix=`pwd`/depends/i686-linux-gnu
      else
        ./configure --prefix=`pwd`/depends/$SNAPCRAFT_ARCH_TRIPLET
      fi
      # Compile Ion Core
      make -j8
      # Install Ion Core
      make install prefix=$SNAPCRAFT_PART_INSTALL
      # print in log which files are installed
      echo "Installed files:"
      find $SNAPCRAFT_PART_INSTALL -type f
    build-packages:
      - curl
      - wget
      - g++
      - gcc
      - g++-8
      - gcc-8
      - make
      - autoconf
      - automake
      - cmake
      - pkg-config
      - libtool
      - bsdmainutils
      - binutils
      - python3
    stage-packages: [ca-certificates]
    after:
      - desktop-qt5
      - patches
  desktop-qt5:
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - locales-all
      - qtwayland5
  patches:
    source: snap/patches
    plugin: dump
    prime:
      - -*
  desktop:
    source: snap/usr/share/applications
    plugin: dump
